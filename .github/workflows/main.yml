name: create-scad-and-stl-release
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  PYTHON: python3.12

jobs:
  build_scad:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup Env
      shell: bash
      run: |
        sudo add-apt-repository ppa:deadsnakes/ppa
        sudo apt install ${PYTHON} ${PYTHON}-venv snapd -y
        sudo snap install openscad-nightly
        ${PYTHON} -m venv .pyenv
        source .pyenv/bin/activate
        pip install --upgrade pip
        pip install solidpython2
    - name: Make Scad and Stl
      shell: bash
      run: |
        source .pyenv/bin/activate
        Xvfb :99 & export DISPLAY=:99
        ${PYTHON} "${{ github.workspace }}/src/maker-joint-main.py" --verbose --openscad_bin "/snap/bin/openscad-nightly"
    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: generated-scad-stl-png
        path: |
          ${{ github.workspace }}/build/*
    - name: Tar Scads, Stls and Pngs
      shell: bash
      run: |
        cd ${{ github.workspace }}/build
        tar -cJf all_scad_stl.tar.xz *.scad *.stl *.png
#    - name: Create Release
#      id: create_release
#      uses: actions/create-release@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        tag_name: ${{ github.ref }}
#        release_name: Release ${{ github.ref }}
#        draft: false
#        prerelease: false
#    - name: Upload Release Asset
#      id: upload-release-asset
#      uses: actions/upload-release-asset@v4
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }}
#        asset_path: ${{ github.workspace }}/build/all_scad_stl.tar.xz
#        asset_name: all_scad_stl.tar.xz
#        asset_content_type: application/x-gtar
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          build/*.tar.xz
          build/*.stl
          build/*.png
